function powi(n: int32, exponent: int32) -> int32 {
    let result: int32 = 1;
    for (let i: int32 = 0; i < exponent; i++) {
        result *= n;    
    }
    return result;
}

function powf(f: float, exponent: int32) -> float {
    let result: float = 1.0;
    for (let i: int32 = 0; i < exponent; i++) {
        result *= f;   
    }
    return result;
}

function absi(n: int32) -> int32 {
    if n < 0 {
        return -n;
    }

    return n;
}

function absf(f: float) -> float {
    if f < 0.0 {
        return -f;    
    }    

    return f;
}